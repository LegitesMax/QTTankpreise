//@GeneratedCode
namespace QTTankpreise.WebApi.Controllers.Base
{
    ///
    /// Generated by the generator
    ///
    public sealed partial class FuelPricesController : Controllers.GenericController<QTTankpreise.Logic.Models.Base.FuelPrice, QTTankpreise.WebApi.Models.Base.FuelPriceEdit, QTTankpreise.WebApi.Models.Base.FuelPrice>
    {
        ///
        /// Generated by the generator
        ///
        static FuelPricesController()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        ///
        /// Generated by the generator
        ///
        public FuelPricesController(QTTankpreise.Logic.Contracts.Base.IFuelPricesAccess other)
        : base(other)
        {
            Constructing();
            
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        protected override QTTankpreise.WebApi.Models.Base.FuelPrice ToOutModel(QTTankpreise.Logic.Models.Base.FuelPrice accessModel)
        {
            var handled = false;
            var result = default(QTTankpreise.WebApi.Models.Base.FuelPrice);
            BeforeToOutModel(accessModel, ref result, ref handled);
            if (handled == false || result == null)
            {
                result = QTTankpreise.WebApi.Models.Base.FuelPrice.Create(accessModel);
            }
            AfterToOutModel(result);
            return result;
        }
        partial void BeforeToOutModel(QTTankpreise.Logic.Models.Base.FuelPrice accessModel, ref QTTankpreise.WebApi.Models.Base.FuelPrice? outModel, ref bool handled);
        partial void AfterToOutModel(QTTankpreise.WebApi.Models.Base.FuelPrice outModel);
    }
}
