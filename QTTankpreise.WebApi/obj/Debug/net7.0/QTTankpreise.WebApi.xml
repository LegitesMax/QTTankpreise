<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QTTankpreise.WebApi</name>
    </assembly>
    <members>
        <member name="T:QTTankpreise.WebApi.Controllers.ApiControllerBase">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.ApiControllerBase.#ctor">
            <summary>
            Initializes a new instance of the ApiControllerBase class.
            </summary>
        </member>
        <member name="T:QTTankpreise.WebApi.Controllers.Base.FuelPricesController">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.Base.FuelPricesController.#cctor">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.Base.FuelPricesController.#ctor(QTTankpreise.Logic.Contracts.Base.IFuelPricesAccess)">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.Base.FuelPricesController.ToOutModel(QTTankpreise.Logic.Models.Base.FuelPrice)">
            
             Generated by the generator
            
        </member>
        <member name="T:QTTankpreise.WebApi.Controllers.GenericController`3">
            <summary>
            A generic one for the standard CRUD operations.
            </summary>
            <typeparam name="TAccessModel">The type of access model</typeparam>
            <typeparam name="TEditModel">The type of edit model</typeparam>
            <typeparam name="TOutModel">The type of output model</typeparam>
        </member>
        <member name="P:QTTankpreise.WebApi.Controllers.GenericController`3.DataAccess">
            <summary>
            This property controls access to the logic operations.
            </summary>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.ToOutModel(`0)">
            <summary>
            Converts an accessModel to a model and copies all properties of the same name from the accessModel to the model.
            </summary>
            <param name="accessModel">The accessModel to be converted</param>
            <returns>The model with the property values of the same name</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.ToOutModel(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Converts all access models to out models and copies all properties of the same name from an accessModel to the model.
            </summary>
            <param name="accessModels">The access model to be converted</param>
            <returns>The models</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.GetMaxPageSizeAsync">
            <summary>
            Gets the maximum size.
            </summary>
            <returns>Maximum size.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.GetCountAsync">
            <summary>
            Gets the number of quantity in the collection.
            </summary>
            <returns>Number of elements in the collection.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.GetCountByAsync(System.String)">
            <summary>
            Returns the number of quantity in the collection based on a predicate.
            </summary>
            <param name="predicate">A string to test each element for a condition.</param>
            <returns>Number of access models in the collection.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.GetByIdAsync(System.Int32)">
            <summary>
            Get a single model by Id.
            </summary>
            <param name="id">Id of the model to get</param>
            <response code="200">Model found</response>
            <response code="404">Model not found</response>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.GetAsync">
            <summary>
            Gets a list of out models.
            </summary>
            <returns>List of out models</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.GetAsync(System.String)">
            <summary>
            Returns all out models in the collection.
            </summary>
            <param name="orderBy">Sorts the elements of a sequence according to a sort clause.</param>
            <returns>All out models of the collection.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.GetPageListAsync(System.Int32,System.Int32)">
            <summary>
            Gets a subset of items from the repository.
            </summary>
            <param name="index">0 based page index.</param>
            <param name="size">The pagesize.</param>
            <returns>Subset in accordance with the parameters.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.GetPageListAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Gets a subset of items from the repository.
            </summary>
            <param name="orderBy">Sorts the elements of a sequence according to a sort clause.</param>
            <param name="index">0 based page index.</param>
            <param name="size">The pagesize.</param>
            <returns>Subset in accordance with the parameters.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.QueryAllAsync(System.String)">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <param name="predicate">A string to test each element for a condition.</param>
            <returns>The filter result.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.QueryAllAsync(System.String,System.String)">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <param name="predicate">A string to test each element for a condition.</param>
            <param name="orderBy">Sorts the elements of a sequence according to a sort clause.</param>
            <returns>The filter result.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.QueryAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <param name="predicate">A string to test each element for a condition.</param>
            <param name="index">0 based page index.</param>
            <param name="size">The pagesize.</param>
            <returns>The filter result.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.QueryAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <param name="predicate">A string to test each element for a condition.</param>
            <param name="orderBy">Sorts the elements of a sequence according to a sort clause.</param>
            <param name="index">0 based page index.</param>
            <param name="size">The pagesize.</param>
            <returns>The filter result.</returns>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.PostAsync(`1)">
            <summary>
            Adds a model.
            </summary>
            <param name="editModel">Model to add</param>
            <returns>Data about the created model (including primary key)</returns>
            <response code="201">Model created</response>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.PutAsync(System.Int32,`1)">
            <summary>
            Updates a model
            </summary>
            <param name="id">Id of the model to update</param>
            <param name="editModel">Data to update</param>
            <returns>Data about the updated model</returns>
            <response code="200">Model updated</response>
            <response code="404">Model not found</response>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.DeleteAsync(System.Int32)">
            <summary>
            Delete a single model by Id
            </summary>
            <param name="id">Id of the model to delete</param>
            <response code="204">Model deleted</response>
            <response code="404">Model not found</response>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">If true, the method has been called directly or indirectly by a user.</param>
        </member>
        <member name="M:QTTankpreise.WebApi.Controllers.GenericController`3.Dispose">
            <summary>
            A derived class should not be able to override this method.
            </summary>
        </member>
        <member name="T:QTTankpreise.WebApi.Models.Base.FuelPrice">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.#cctor">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.#ctor">
            
             Generated by the generator
            
        </member>
        <member name="P:QTTankpreise.WebApi.Models.Base.FuelPrice.CompanyName">
            
             Generated by the generator
            
        </member>
        <member name="P:QTTankpreise.WebApi.Models.Base.FuelPrice.PriceStatus">
            
             Generated by the generator
            
        </member>
        <member name="P:QTTankpreise.WebApi.Models.Base.FuelPrice.Price">
            
             Generated by the generator
            
        </member>
        <member name="P:QTTankpreise.WebApi.Models.Base.FuelPrice.Distance">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.Create">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.Create(System.Object)">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.Create(QTTankpreise.Logic.Models.Base.FuelPrice)">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.CopyProperties(QTTankpreise.Logic.Models.Base.FuelPrice)">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.CopyProperties(QTTankpreise.WebApi.Models.Base.FuelPrice)">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.Equals(System.Object)">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPrice.GetHashCode">
            
             Generated by the generator
            
        </member>
        <member name="T:QTTankpreise.WebApi.Models.Base.FuelPriceEdit">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPriceEdit.#cctor">
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Models.Base.FuelPriceEdit.#ctor">
            
             Generated by the generator
            
        </member>
        <member name="P:QTTankpreise.WebApi.Models.Base.FuelPriceEdit.CompanyName">
            
             Generated by the generator
            
        </member>
        <member name="P:QTTankpreise.WebApi.Models.Base.FuelPriceEdit.PriceStatus">
            
             Generated by the generator
            
        </member>
        <member name="P:QTTankpreise.WebApi.Models.Base.FuelPriceEdit.Price">
            
             Generated by the generator
            
        </member>
        <member name="P:QTTankpreise.WebApi.Models.Base.FuelPriceEdit.Distance">
            
             Generated by the generator
            
        </member>
        <member name="T:QTTankpreise.WebApi.Models.ModelObject">
            <summary>
            The model with the identity property.
            </summary>
        </member>
        <member name="P:QTTankpreise.WebApi.Models.ModelObject.Id">
            <summary>
            ID of the model (primary key)
            </summary>
        </member>
        <member name="M:QTTankpreise.WebApi.Models.ModelObject.IsEqualsWith(System.Object,System.Object)">
            <summary>
            Determines whether two object instances are equal
            </summary>
            <param name="obj1">The object to compare with the second object.</param>
            <param name="obj2">The object to compare with the first object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="T:QTTankpreise.WebApi.Models.VersionModel">
            <summary>
            The model with the version property.
            </summary>
        </member>
        <member name="T:QTTankpreise.WebApi.Program">
            <summary>
            Extension Program
            </summary>
            
             Generated by the generator
            
        </member>
        <member name="M:QTTankpreise.WebApi.Program.BeforeBuild(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Services can be added using this method.
            </summary>
            <param name="builder">The builder</param>
        </member>
        <member name="M:QTTankpreise.WebApi.Program.AfterBuild(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Configures can be added using this method.
            </summary>
            <param name="app"></param>
        </member>
    </members>
</doc>
