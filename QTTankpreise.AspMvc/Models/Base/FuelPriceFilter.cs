//@GeneratedCode
namespace QTTankpreise.AspMvc.Models.Base
{
    using System;
    ///
    /// Generated by the generator
    ///
    public partial class FuelPriceFilter : Models.View.IFilterModel
    {
        ///
        /// Generated by the generator
        ///
        static FuelPriceFilter()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        ///
        /// Generated by the generator
        ///
        public FuelPriceFilter()
        {
            Constructing();
            
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        
        ///
        /// Generated by the generator
        ///
        public System.String? CompanyName
        { get; set; }
        
        ///
        /// Generated by the generator
        ///
        public QTTankpreise.Logic.Modules.Common.PriceStatus? PriceStatus
        { get; set; }
        
        ///
        /// Generated by the generator
        ///
        public System.Double? Price
        { get; set; }
        
        ///
        /// Generated by the generator
        ///
        public System.String? Distance
        { get; set; }
        ///
        /// Generated by the generator
        ///
        public bool HasEntityValue => CompanyName != null || PriceStatus != null || Price != null || Distance != null;
        private bool show = true;
        ///
        /// Generated by the generator
        ///
        public bool Show => show;
        ///
        /// Generated by the generator
        ///
        public string CreateEntityPredicate()
        {
            var result = new System.Text.StringBuilder();
            
            if (CompanyName != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(CompanyName != null && CompanyName.Contains(\"{CompanyName}\"))");
            }
            if (PriceStatus != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                var ev = Convert.ChangeType(PriceStatus, typeof(int));
                result.Append($"(PriceStatus != null && PriceStatus =={ev})");
            }
            if (Price != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(Price != null && Price == {Price})");
            }
            if (Distance != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(Distance != null && Distance.Contains(\"{Distance}\"))");
            }
            return result.ToString();
        }
        ///
        /// Generated by the generator
        ///
        public override string ToString()
        {
            System.Text.StringBuilder sb = new();
            if (string.IsNullOrEmpty(CompanyName) == false)
{
sb.Append($"CompanyName: {CompanyName} ");
}
if (PriceStatus != null)
{
sb.Append($"PriceStatus: {PriceStatus} ");
}
if (Price != null)
{
sb.Append($"Price: {Price} ");
}
if (string.IsNullOrEmpty(Distance) == false)
{
sb.Append($"Distance: {Distance} ");
}
            return sb.ToString();
        }
    }
}
