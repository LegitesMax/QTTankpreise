//@GeneratedCode
namespace QTTankpreise.Logic.Models.Base
{
    ///
    /// Generated by the generator
    ///
    public partial class FuelPrice
    {
        ///
        /// Generated by the generator
        ///
        static FuelPrice()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        ///
        /// Generated by the generator
        ///
        public FuelPrice()
        {
            Constructing();
            _source = new Entities.Base.FuelPrice();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        internal FuelPrice(Entities.Base.FuelPrice source)
        {
            Constructing();
            _source = source;
            Constructed();
        }
        
        new internal Entities.Base.FuelPrice Source
        {
            get => (Entities.Base.FuelPrice)(_source!);
            set => _source = value;
        }
        
        public System.String CompanyName
        {
            get => Source.CompanyName;
            set => Source.CompanyName = value;
        }
        
        public QTTankpreise.Logic.Modules.Common.PriceStatus PriceStatus
        {
            get => Source.PriceStatus;
            set => Source.PriceStatus = value;
        }
        
        public System.Double Price
        {
            get => Source.Price;
            set => Source.Price = value;
        }
        
        public System.String Distance
        {
            get => Source.Distance;
            set => Source.Distance = value;
        }
        ///
        /// Generated by the generator
        ///
        internal void CopyProperties(Entities.Base.FuelPrice other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                CompanyName = other.CompanyName;
                PriceStatus = other.PriceStatus;
                Price = other.Price;
                Distance = other.Distance;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(Entities.Base.FuelPrice other, ref bool handled);
        partial void AfterCopyProperties(Entities.Base.FuelPrice other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTTankpreise.Logic.Models.Base.FuelPrice other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                CompanyName = other.CompanyName;
                PriceStatus = other.PriceStatus;
                Price = other.Price;
                Distance = other.Distance;
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTTankpreise.Logic.Models.Base.FuelPrice other, ref bool handled);
        partial void AfterCopyProperties(QTTankpreise.Logic.Models.Base.FuelPrice other);
        ///
        /// Generated by the generator
        ///
        public override bool Equals(object? obj)
        {
            bool result = false;
            if (obj is Models.Base.FuelPrice other)
            {
                result = Id == other.Id;
            }
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public override int GetHashCode()
        {
            return this.CalculateHashCode(CompanyName, PriceStatus, Price, Distance, Id);
        }
        ///
        /// Generated by the generator
        ///
        public static QTTankpreise.Logic.Models.Base.FuelPrice Create()
        {
            BeforeCreate();
            var result = new QTTankpreise.Logic.Models.Base.FuelPrice();
            AfterCreate(result);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTTankpreise.Logic.Models.Base.FuelPrice Create(object other)
        {
            BeforeCreate(other);
            var result = new QTTankpreise.Logic.Models.Base.FuelPrice();
            CommonBase.Extensions.ObjectExtensions.CopyFrom(result, other);
            AfterCreate(result, other);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTTankpreise.Logic.Models.Base.FuelPrice Create(QTTankpreise.Logic.Models.Base.FuelPrice other)
        {
            BeforeCreate(other);
            var result = new QTTankpreise.Logic.Models.Base.FuelPrice();
            result.CopyProperties(other);
            AfterCreate(result, other);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTTankpreise.Logic.Models.Base.FuelPrice Create(Entities.Base.FuelPrice other)
        {
            BeforeCreate(other);
            var result = new QTTankpreise.Logic.Models.Base.FuelPrice();
            result.Source = other;
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate();
        static partial void AfterCreate(QTTankpreise.Logic.Models.Base.FuelPrice instance);
        static partial void BeforeCreate(object other);
        static partial void AfterCreate(QTTankpreise.Logic.Models.Base.FuelPrice instance, object other);
        static partial void BeforeCreate(QTTankpreise.Logic.Models.Base.FuelPrice other);
        static partial void AfterCreate(QTTankpreise.Logic.Models.Base.FuelPrice instance, QTTankpreise.Logic.Models.Base.FuelPrice other);
        static partial void BeforeCreate(Entities.Base.FuelPrice other);
        static partial void AfterCreate(QTTankpreise.Logic.Models.Base.FuelPrice instance, Entities.Base.FuelPrice other);
    }
}
